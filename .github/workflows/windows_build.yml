on:
  workflow_call:
    inputs:
      runner:
        type: string
        required: true
        description: Runner to execute on
      win_edition:
        type: string
        required: true
        description: Windows edition
      isolation:
        type: string
        required: true
        description: Which Windows isolation mode to build for
      vs_version:
        type: string
        required: true
        description: MSVC version
      cuda_version:
        type: string
        required: true
        description: CUDA version

jobs:
  build_windows_image:
    runs-on: ${{ inputs.runner }}
    name: "Build image: ${{ inputs.win_edition }} + ${{ inputs.isolation }} + VS${{ vs_version }} + CUDA ${{ inputs.cuda_version }}"
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: "Build image: ${{ matrix.edition }} + VS${{ matrix.version }}"
        id: build_image
        uses: ./.github/actions/build-windows-image
        with:
          repo: ghcr.io/${{ github.repository }}
          win_edition: ${{ input.win_edition }}
          vs_version: ${{ input.vs_version }}
          cuda_version: ${{ input.cuda_version }}
          isolation: ${{ input.isolation }}

      - name: "Test image: ${{ steps.build_image.outputs.image }}"
        id: test_image
        uses: ./.github/actions/test-windows-image
        with:
          repo: ghcr.io/${{ github.repository }}
          win_edition: ${{ input.win_edition }}
          vs_version: ${{ input.vs_version }}
          cuda_version: ${{ input.cuda_version }}
          isolation: ${{ input.isolation }}

      - name: "Push image: ${{ steps.build_image.outputs.image }}"
        id: push_image
        uses: ./.github/actions/push-windows-image
        with:
          repo: ghcr.io/${{ github.repository }}
          win_edition: ${{ input.win_edition }}
          vs_version: ${{ input.vs_version }}
          cuda_version: ${{ input.cuda_version }}
          isolation: ${{ input.isolation }}
